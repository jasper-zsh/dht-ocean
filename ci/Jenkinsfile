pipeline {
  agent any

  environment {
    NAMESPACE = "${JOB_NAME}"
  }

  stages {
    stage("Find services to build docker image") {
      agent {
        kubernetes {
          inheritFrom "kaniko"
        }
      }
      steps {
        script {
          def dockerfile = "ci/Dockerfile"
          def commitTag = "${env.DOCKER_REGISTRY}/dht-ocean/dht-ocean:${env.GIT_COMMIT}"
          def latestTag = "${env.DOCKER_REGISTRY}/dht-ocean/dht-ocean:latest"
          println "Built task for ${dockerfile} as ${commitTag}"
          stage("Build and push ${it}") {
            container("kaniko") {
              sh """
              /kaniko/executor --cache=true \
                --context `pwd` \
                --dockerfile `pwd`/${dockerfile} \
                --destination ${commitTag} \
                --destination ${latestTag}
              """
            }
          }
          def services = ["deployment/crawler", "deployment/ocean", "deployment/tracker", "statefulset/proxy"]
          
          deployTasks = [:]
          services.each() {
            deployTasks["Deploy ${it}"] = {
              stage("Deploy ${it}") {
                container("kubectl") {
                  withKubeConfig(namespace: "${env.NAMESPACE}") {
                    sh "kubectl rollout restart ${it}"
                  }
                }
              }
            }
          }
          parallel deployTasks
        }
      }
    }
  }
}